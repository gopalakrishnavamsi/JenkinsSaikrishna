<apex:page sidebar="false" showHeader="true" controller="SetupController" title="{!$Label.DocuSign}">
    <apex:includeLightning />
    <apex:slds />
    <apex:includeScript value="{!$Resource.stringUtils}"/>

    <style type="text/css">
        #ds-setup {
            min-height: 100vh;
            background-color: #f7f9fb;
            position: relative;
        }

        .noSidebarCell #ds-setup {
            min-height: calc(100vh - 120px);
        }

        .bodyDiv .outerNoSidebar,
        .noSidebarCell,
        .sidebarCell .fixed {
            padding: 0;
        }

        .noSidebarCell #ds-setup .slds-scope .strike-wizard__footer {
            position: absolute;
        }
    </style>

    <div id="ds-setup"></div>

    <script>
      var navigateToURL = function (event) {
        var url = event.getParam('url');
        window.open(url, '_blank');
      };

      function showError(component, message) {
        var evt = component.getEvent('toastEvent');
        evt.setParams({
          show: true,
          message: message,
          mode: 'error'
        });
        evt.fire();
      }

      function beginOAuth(component, environment, otherUrl) {
        debugger;
        try {
          Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SetupController.beginOAuth}', environment, otherUrl, function (result, event) {
            if (event && event.status) {
              window.endOAuth = function (response, loginInformation) {
                var evt = component.getEvent('oauthEvent');
                evt.setParams({
                  response: response,
                  loginInformation: loginInformation
                });
                evt.fire();
              };

              var width = 600;
              var height = 600;
              var left = (screen.width / 2) - (width / 2);
              var top = (screen.height / 2) - (height / 2);

              var w = window.open(stringUtils.unescapeHtml(result), 'oauth', 'width=' + width + ',height=' + height + ',left=' + left + ',top=' + top);
              w.addEventListener('unload', function () {
                var evt = component.getEvent('loadingEvent');
                evt.setParams({
                  isLoading: false
                });
                evt.fire();
              });
            } else {
              showError(component, event.message);
            }
          });
        } catch (err) {
          showError(component, err);
        }
      }

      var namespace = '{!JSENCODE(namespace)}';
      $Lightning.use(namespace + ':SetupApp', function () {
        $Lightning.createComponent(namespace + ':Setup', {
          beginOAuth: beginOAuth
        }, 'ds-setup', function () {
          $A.eventService.addHandler({'event': 'force:navigateToURL', 'handler': navigateToURL});
        });
      });
    </script>
</apex:page>
