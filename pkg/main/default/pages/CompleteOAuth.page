<apex:page id="CompleteOAuth" controller="SetupController" title="{!$Label.DocuSign}" showHeader="false"
           sideBar="false">

    <apex:slds/>

    <script>
      function endOAuth(response, loginInformation) {
        if (loginInformation && loginInformation.target) {
          if (loginInformation.type === 'DEVELOPER') { // redirect locally if developer-initiated login
            var redirectTo = loginInformation.target;
            // ensure exactly one leading slash for local path
            redirectTo = '/' + redirectTo.replace(/^\/+/, '');
            // append status and message to query string
            if (redirectTo.indexOf('?') === -1) {
              redirectTo += '?dfsle__status=' + encodeURIComponent(loginInformation.status);
            } else {
              redirectTo += '&dfsle__status=' + encodeURIComponent(loginInformation.status);
            }
            if (loginInformation.message) {
              redirectTo += '&dfsle__message=' + encodeURIComponent(loginInformation.message);
            }

            // do the redirect
            if (typeof sforce !== 'undefined' && sforce && (!!sforce.one)) {
              sforce.one.navigateToURL(redirectTo, true);
            } else {
              window.location.replace(redirectTo);
            }
          } else {
            if (window.opener) {
              window.opener.postMessage({
                response: response,
                loginInformation: loginInformation
              }, loginInformation.target);
            }
            window.close();
          }
        }
      }

      function showToast(errorMessage) {
        document.getElementById('error-message').textContent = errorMessage;
        document.getElementById('toast').classList.remove('slds-hidden');
      }

      function hideToast() {
        document.getElementById('toast').classList.add('slds-hidden');
      }

      Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SetupController.completeOAuth}', '{!JSENCODE($CurrentPage.parameters.code)}', '{!JSENCODE($CurrentPage.parameters.state)}', '{!JSENCODE($CurrentPage.parameters.error)}', '{!JSENCODE($CurrentPage.parameters.error_message)}', function (loginInformation, response) {
        if (response.status) {
          endOAuth(response, loginInformation);
        } else {
          showToast(response.message);
        }
      });
    </script>

    <!-- loading spinner -->
    <div id="spinner" role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand">
        <span class="slds-assistive-text">{!$Label.Loading}</span>
        <div class="slds-spinner__dot-a"></div>
        <div class="slds-spinner__dot-b"></div>
    </div>

    <!-- toast -->
    <div id="toast" class="slds-hidden" style="height: 4rem;">
        <div class="slds-notify_container slds-is-relative">
            <div class="slds-notify slds-notify_toast slds-theme_error" role="alert">
                <span class="slds-icon_container slds-icon-utility-error slds-m-right_small slds-no-flex slds-align-top">
                <svg class="slds-icon slds-icon_small" aria-hidden="true">
                    <use xmlns:xlink="http://www.w3.org/1999/xlink"
                         xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#error')}"/>
                </svg>
            </span>
                <div class="slds-notify__content">
                    <h2 id="error-message" class="slds-text-heading_small"></h2>
                </div>
                <button class="slds-button slds-button_icon slds-notify__close slds-button_icon-inverse" title="{!$Label.Close}"
                        onclick='hideToast()'>
                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                        <use xmlns:xlink="http://www.w3.org/1999/xlink"
                             xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"/>
                    </svg>
                    <span class="slds-assistive-text">Close</span>
                </button>
            </div>
        </div>
    </div>
</apex:page>
